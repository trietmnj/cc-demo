name: Auto-transfer issues to usace-docs

on:
  issues:
    types: [opened]

jobs:
  xfer:
    runs-on: ubuntu-latest
    if: github.repository == 'trietmnj/cc-demo'
    permissions:
      issues: write
      contents: read
    steps:
      - name: "Preflight: verify token can access target repo"
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ISSUE_XFER_TOKEN }}
          script: |
            const owner = 'trietmnj';
            const targetRepo = 'usace-docs';
            try {
              const r = await github.request('GET /repos/{owner}/{repo}', {
                owner, repo: targetRepo,
                headers: { 'X-GitHub-Api-Version': '2022-11-28' }
              });
              core.info(`Target repo OK: visibility=${r.data.visibility}`);
            } catch (e) {
              core.setFailed(`Token cannot access ${owner}/${targetRepo}. Ensure PAT has Issues: Read & Write on BOTH repos.`);
            }

      - name: "Transfer via API (skips if labeled keep-here)"
        id: transfer
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ISSUE_XFER_TOKEN }}
          script: |
            const owner = 'trietmnj';
            const sourceRepo = 'cc-demo';
            const targetRepo = 'usace-docs';
            const issue = context.payload.issue;

            if (issue.labels?.some(l => l.name === 'keep-here')) {
              core.notice("Found 'keep-here' label; not transferring.");
              return;
            }

            const res = await github.request(
              'POST /repos/{owner}/{repo}/issues/{issue_number}/transfer',
              {
                owner, repo: sourceRepo, issue_number: issue.number,
                new_repository: `${owner}/${targetRepo}`,
                headers: {
                  accept: 'application/vnd.github+json',
                  'X-GitHub-Api-Version': '2022-11-28'
                }
              }
            );

            core.setOutput('new_url', res.data?.issue?.html_url || '');
            core.info(`Transferred → ${res.data?.issue?.html_url}`);

      - name: "Fallback: copy + link + close if transfer failed"
        if: steps.transfer.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ISSUE_XFER_TOKEN }}
          script: |
            const owner = 'trietmnj';
            const sourceRepo = 'cc-demo';
            const targetRepo = 'usace-docs';
            const issue = context.payload.issue;

            // Create in target
            const created = await github.request('POST /repos/{owner}/{repo}/issues', {
              owner, repo: targetRepo,
              headers: { 'X-GitHub-Api-Version': '2022-11-28' },
              title: issue.title,
              body: `${issue.body || ''}\n\n_↪️ Copied from ${owner}/${sourceRepo}#${issue.number}_`
            });

            // Copy labels that exist in target (best-effort)
            const labels = (issue.labels || []).map(l => l.name);
            if (labels.length) {
              try {
                await github.request('POST /repos/{owner}/{repo}/issues/{issue_number}/labels', {
                  owner, repo: targetRepo, issue_number: created.data.number, labels,
                  headers: { 'X-GitHub-Api-Version': '2022-11-28' }
                });
              } catch { /* ignore missing labels */ }
            }

            // Breadcrumb + close source
            await github.request('POST /repos/{owner}/{repo}/issues/{issue_number}/comments', {
              owner, repo: sourceRepo, issue_number: issue.number,
              body: `Auto-moved to **${owner}/${targetRepo}#${created.data.number}** → ${created.data.html_url}`
            });
            await github.request('PATCH /repos/{owner}/{repo}/issues/{issue_number}', {
              owner, repo: sourceRepo, issue_number: issue.number, state: 'closed'
            });

            core.notice(`Copied to ${created.data.html_url}`);
